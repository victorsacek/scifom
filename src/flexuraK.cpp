#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#define NODE_POR_ELE 3
#define GLNODE 3

void montaKe(double **Ke,long **eletopo,double **posnos, double *props, double *Te, long contador);

extern double RHOC;
extern double RHOM;

extern long tri_flex;
extern long **Tri_flex;
extern long nodes_flex;
extern double **xy_flex;

extern double **Kflex;
extern double **Kflex_c;
extern long **Kconec;
extern long *Kposconec;
extern double **Ke;
extern double *Te;
extern double *props;
extern double *Kdiag;
extern double *Kdiag_c;

extern double TeConstante;
extern double TeConstante2;

extern double Telitho;

extern double maxy;
extern double miny;
extern double minx;
extern double maxx;

extern double axis_stream;

void flexuraK()
{
    long t,ii,jj,c1,c2,iaux;
    //double media_Ke;
	
	
	props[3]=RHOC;
	for (t=0; t<tri_flex; t++){
		montaKe(Ke,Tri_flex,xy_flex,props,Te,t);		
		for (ii=0;ii<NODE_POR_ELE;ii++){
			for (jj=0;jj<NODE_POR_ELE;jj++){
				for (c1=0;c1<GLNODE;c1++){
                    for (c2=0;c2<GLNODE;c2++){
                        if (ii==jj && c1==c2){
                            Kdiag_c[Tri_flex[t][ii]*3+c1]+=Ke[ii*GLNODE + c1 ][jj*GLNODE + c2];
                        }   
                        else {
                            for (iaux=0;iaux<Kposconec[Tri_flex[t][ii]];iaux++){
                                if (Kconec[Tri_flex[t][ii]][iaux]==Tri_flex[t][jj]){
                                    Kflex_c[Tri_flex[t][ii]*3+c1][iaux*3+c2]+=Ke[ii*GLNODE + c1 ][jj*GLNODE + c2];
                                }
                            }
                        }                     
                    }
                }
			}
		}
	}
	
	props[3]=RHOM;
	
	double x,y;
	
	//TeConstante = Telitho;
	//TeConstante2 = Telitho;
	
	//double dx,dy;
	
	//double xa,ya;
	
	double xxn;
	
	//double ddx,ddy;
	
	//double escala_z;
	
	//double dist;
	
	
	//double media_x = (maxx+minx)/2.0;
	//double ml_x = 0.7*(maxx-minx)/2.0;
	
	//double media_y = (maxy+miny)/2.0;
	//double ml_y = 0.7*(maxy-miny)/2.0;
	
	//double xx1 = (minx+0.3*(maxx-minx));
	//double yy2 = (miny+0.92*(maxy-miny));
	
	//double xx2 = (minx+0.5*(maxx-minx));
	
	//double yy3 = (miny+0.5*(maxy-miny));
	
	xxn = (minx+0.32*(maxx-minx));
	
	for (t=0;t<tri_flex;t++){
        /*if ((xy_flex[Tri_flex[t][0]][1]+
             xy_flex[Tri_flex[t][1]][1]+
             xy_flex[Tri_flex[t][2]][1])/3>(maxy+miny)/2)
			Te[t]=TeConstante;
        else 
			Te[t]=TeConstante2;
		
		if ((xy_flex[Tri_flex[t][0]][1]+
			xy_flex[Tri_flex[t][1]][1]+
			xy_flex[Tri_flex[t][2]][1])/3<minx)
			Te[t]=5000.0;*/
		
		/*if ((xy_flex[Tri_flex[t][0]][0]+
			  xy_flex[Tri_flex[t][1]][0]+
			  xy_flex[Tri_flex[t][2]][0])/3>=axis_stream)
			Te[t]=Telitho;
		
		if ((xy_flex[Tri_flex[t][0]][0]+
			 xy_flex[Tri_flex[t][1]][0]+
			 xy_flex[Tri_flex[t][2]][0])/3<minx)
			Te[t]=Telitho;*/
		
		x = (xy_flex[Tri_flex[t][0]][0]+
			 xy_flex[Tri_flex[t][1]][0]+
			 xy_flex[Tri_flex[t][2]][0])/3;
		
		y = (xy_flex[Tri_flex[t][0]][1]+
			 xy_flex[Tri_flex[t][1]][1]+
			 xy_flex[Tri_flex[t][2]][1])/3;
		
		/*xa = x;
		ya = y+200000.0;
		
		if (xa<xx1){
			
			ddx = xa - xx1;
			ddy = ya - (miny+0.43*(maxy-miny));
			
			dist = sqrt(2.*ddx*ddx+ddy*ddy);
			
			if (dist<1300000.0)
				Te[t]=70000.0;
			else
				Te[t]=10000.0;
		}
		else{
			if (xa<xx2){
				if (ya<yy2)
					Te[t]=70000.0;
				else
					Te[t]=10000.0;
			}
			else{
				if (ya<yy2+(xa-xx2)*(yy3-yy2)/(maxx-xx2))
					Te[t]=70000.0;
				else
					Te[t]=10000.0;
			}
		}
		
		if (xa<xxn){
			
			ddx = xa - xxn;
			ddy = ya - (miny+0.43*(maxy-miny));
			
			dist = sqrt(2.1*ddx*ddx+0.8*ddy*ddy);
			
			escala_z = exp(-pow((dist-1000000.0)/200000.0,2.0))*exp(-pow(ya/2100000.0,6.0));
			
			if (xa>(minx+0.28*(maxx-minx)))
				escala_z=escala_z*pow((xxn-xa)/(xxn-(minx+0.28*(maxx-minx))),2.0);
			
			//if (escala_z>0.1){
			if (dist-1000000.0>0 && Te[t]!=10000.0){
				Te[t]=15000.0;
			}
		}*/
		
		Te[t]=Telitho;
		

    }
	
	FILE *f_Te;
	f_Te = fopen("TeLito.txt","w");
	for (t=0;t<tri_flex;t++){
		fprintf(f_Te, "%lf %lf\n",(xy_flex[Tri_flex[t][0]][0]+
								   xy_flex[Tri_flex[t][1]][0]+
								   xy_flex[Tri_flex[t][2]][0])/3,Te[t]);
	}
	fclose(f_Te);
    
    for (t=0; t<tri_flex; t++){
		montaKe(Ke,Tri_flex,xy_flex,props,Te,t);		
		for (ii=0;ii<NODE_POR_ELE;ii++){
			for (jj=0;jj<NODE_POR_ELE;jj++){
				for (c1=0;c1<GLNODE;c1++){
                    for (c2=0;c2<GLNODE;c2++){
                        if (ii==jj && c1==c2){
                            Kdiag[Tri_flex[t][ii]*3+c1]+=Ke[ii*GLNODE + c1 ][jj*GLNODE + c2];
                        }   
                        else {
                            for (iaux=0;iaux<Kposconec[Tri_flex[t][ii]];iaux++){
                                if (Kconec[Tri_flex[t][ii]][iaux]==Tri_flex[t][jj]){
                                    Kflex[Tri_flex[t][ii]*3+c1][iaux*3+c2]+=Ke[ii*GLNODE + c1 ][jj*GLNODE + c2];
                                }
                            }
                        }                     
                    }
                }
			}
		}
	}
	
	
	
}


void montaKe(double **Ke,long **eletopo,double **posnos, double *props, double *Te, long contador)
{

	long i,j,cont,aux1;
	float N[9], B[3][9], Di[3][3], BDi[9][3], L1, L2, L3;
	float b1,b2,b3,c1,c2,c3,l1,l2,l3,mi1,mi2,mi3, xi,xj,xk,yi,yj,yk,delta,xaux,yaux,E,v,T,rho,g,D;


	xi=posnos[eletopo[contador][0]][0]; yi=posnos[eletopo[contador][0]][1];
	xj=posnos[eletopo[contador][1]][0]; yj=posnos[eletopo[contador][1]][1];
	xk=posnos[eletopo[contador][2]][0]; yk=posnos[eletopo[contador][2]][1];
	delta=0.5*((xj*yk-yj*xk)+xi*(yj-yk)+yi*(xk-xj));
	if (delta==0) { printf("Elemento colapsado: delta = 0\n"); exit(-1);}
	if (delta<0) {
        printf("QUE ESTRANHO!!!");         
		delta=delta*(-1);
		xaux=xi; xi=xk; xk=xaux;
		yaux=yi; yi=yk; yk=yaux;
		aux1=eletopo[contador][0]; eletopo[contador][0]=eletopo[contador][2]; eletopo[contador][2]=aux1;
	}

	E     = props[0];
	v     = props[1];
	//T     = props[eletopo[contador][3]][2];
	T = Te[contador];
	rho   = props[3];
	g     = props[4];
	
	
	D=E*T*T*T/12/(1-v*v);

	b1=yj-yk; c1=xk-xj;
	b2=yk-yi; c2=xi-xk;
	b3=yi-yj; c3=xj-xi;
	l1=(xk-xj)*(xk-xj)+(yk-yj)*(yk-yj);
	l2=(xk-xi)*(xk-xi)+(yk-yi)*(yk-yi);
	l3=(xi-xj)*(xi-xj)+(yi-yj)*(yi-yj);
	mi1=(l3-l2)/l1;
	mi2=(l1-l3)/l2;
	mi3=(l2-l1)/l3;

	for (i=0;i<9;i++) {
        for (j=0;j<9;j++) {
            Ke[i][j]=0;
        }
    }

	for(cont=0; cont<3; cont++){

	if(cont==0) { L1=0; 	L2=0.5; 	L3=0.5; }
	if(cont==1) { L1=0.5; 	L2=0; 		L3=0.5; }
	if(cont==2) { L1=0.5; 	L2=0.5; 	L3=0; }

	N[0]=2*(-L1*L3*L3+L1*L2*L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2-L1*L2*L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+L1*L1*L2)+L1*L3-L1*L2+L1;
    N[1]=-b2*(L1*L3*L3+L1*L2*L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2-L1*L3)-b3*(L1*L2*L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+L1*L1*L2);
	N[2]=-c2*(L1*L3*L3+L1*L2*L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2-L1*L3)-c3*(L1*L2*L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+L1*L1*L2);
	N[3]=2*(-L1*L2*L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+L1*L2*L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+L2*L2*L3-L1*L1*L2)-L2*L3+L1*L2+L2;
	N[4]=-b3*(L1*L2*L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+L1*L1*L2-L1*L2)-b1*(L1*L2*L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+L2*L2*L3);
	N[5]=-c3*(L1*L2*L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+L1*L1*L2-L1*L2)-c1*(L1*L2*L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+L2*L2*L3);
	N[6]=2*(L1*L3*L3+L1*L2*L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2-L1*L2*L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2-L2*L2*L3)+L2*L3-L1*L3+L3;
	N[7]=-b2*(L1*L3*L3+L1*L2*L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2)-b1*(L1*L2*L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+L2*L2*L3-L2*L3);
	N[8]=-c2*(L1*L3*L3+L1*L2*L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2)-c1*(L1*L2*L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+L2*L2*L3-L2*L3);


	Di[0][0]=D;	Di[0][1]=D*v;	Di[0][2]=0;
	Di[1][0]=D*v;	Di[1][1]=D;	Di[1][2]=0;
	Di[2][0]=0;	Di[2][1]=0;	Di[2][2]=D*(1-v)/2;







        B[0][0] = (b1*(b2*(2*(L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2-L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(-3*mi3-1)*L2*L3/2-(3*mi2+1)*L2*L3/2+3*(1-mi3)*L1*L3/2
									-(-3*mi2-1)*L1*L3/2+2*L1)
		       -1)
		   +b3*(2*(L2*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2-L2*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(3*mi3+1)*L2*L3/2-3*(1-mi2)*L2*L3/2-2*L3
									+3*(1-mi3)*L1*L2/2-(-3*mi2-1)*L1*L2/2)
		       +1)+2*b1*(3*(1-mi3)*L2*L3-(-3*mi2-1)*L2*L3+2*L2))
		+b2*(b1*(2*(L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2-L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(-3*mi3-1)*L2*L3/2-(3*mi2+1)*L2*L3/2
									 +3*(1-mi3)*L1*L3/2-(-3*mi2-1)*L1*L3/2+2*L1)
			-1)
		    +2*b3
		      *(L1*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2-L1*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(3*mi3+1)*L1*L3/2-3*(1-mi2)*L1*L3/2+(-3*mi3-1)*L1*L2/2
								     -(3*mi2+1)*L1*L2/2)+2*b2*((-3*mi3-1)*L1*L3-(3*mi2+1)*L1*L3))
		+b3*(b1*(2*(L2*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2-L2*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(3*mi3+1)*L2*L3/2-3*(1-mi2)*L2*L3/2-2*L3
									 +3*(1-mi3)*L1*L2/2-(-3*mi2-1)*L1*L2/2)
			+1)
		    +2*b2
		      *(L1*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2-L1*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(3*mi3+1)*L1*L3/2-3*(1-mi2)*L1*L3/2+(-3*mi3-1)*L1*L2/2
								     -(3*mi2+1)*L1*L2/2)+2*b3*((3*mi3+1)*L1*L2-3*(1-mi2)*L1*L2-2*L1)))
		/(4*delta*delta);
    B[0][1] = 	       (b1*(b2*(-b3*(L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(-3*mi3-1)*L2*L3/2+3*(1-mi3)*L1*L3/2+2*L1)
		       -b2*(L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(3*mi2+1)*L2*L3/2+(-3*mi2-1)*L1*L3/2))
		   +b3*(-b3*(L2*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L2*L3/2+3*(1-mi3)*L1*L2/2)
		       -b2*(L2*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L2*L3/2+2*L3+(-3*mi2-1)*L1*L2/2-1))+b1*(-b3*(3*(1-mi3)*L2*L3+2*L2)-b2*(-3*mi2-1)*L2*L3))
		+b2*(b1*(-b3*(L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(-3*mi3-1)*L2*L3/2+3*(1-mi3)*L1*L3/2+2*L1)
			-b2*(L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(3*mi2+1)*L2*L3/2+(-3*mi2-1)*L1*L3/2))
		    +b3*(-b3*(L1*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L1*L3/2+(-3*mi3-1)*L1*L2/2)
			-b2*(L1*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L1*L3/2+(3*mi2+1)*L1*L2/2))+b2*(-b3*(-3*mi3-1)*L1*L3-b2*(3*mi2+1)*L1*L3))
		+b3*(b1*(-b3*(L2*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L2*L3/2+3*(1-mi3)*L1*L2/2)
			-b2*(L2*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L2*L3/2+2*L3+(-3*mi2-1)*L1*L2/2-1))
		    +b2*(-b3*(L1*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L1*L3/2+(-3*mi3-1)*L1*L2/2)
			-b2*(L1*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L1*L3/2+(3*mi2+1)*L1*L2/2))+b3*(-b2*(3*(1-mi2)*L1*L2+2*L1)-b3*(3*mi3+1)*L1*L2)))
		/(4*delta*delta);
    B[0][2] = 	       (b1*(b2*(-c3*(L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(-3*mi3-1)*L2*L3/2+3*(1-mi3)*L1*L3/2+2*L1)
		       -c2*(L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(3*mi2+1)*L2*L3/2+(-3*mi2-1)*L1*L3/2))
		   +b3*(-c3*(L2*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L2*L3/2+3*(1-mi3)*L1*L2/2)
		       -c2*(L2*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L2*L3/2+2*L3+(-3*mi2-1)*L1*L2/2-1))+b1*(-c3*(3*(1-mi3)*L2*L3+2*L2)-c2*(-3*mi2-1)*L2*L3))
		+b2*(b1*(-c3*(L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(-3*mi3-1)*L2*L3/2+3*(1-mi3)*L1*L3/2+2*L1)
			-c2*(L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(3*mi2+1)*L2*L3/2+(-3*mi2-1)*L1*L3/2))
		    +b3*(-c3*(L1*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L1*L3/2+(-3*mi3-1)*L1*L2/2)
			-c2*(L1*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L1*L3/2+(3*mi2+1)*L1*L2/2))+b2*(-c3*(-3*mi3-1)*L1*L3-c2*(3*mi2+1)*L1*L3))
		+b3*(b1*(-c3*(L2*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L2*L3/2+3*(1-mi3)*L1*L2/2)
			-c2*(L2*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L2*L3/2+2*L3+(-3*mi2-1)*L1*L2/2-1))
		    +b2*(-c3*(L1*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L1*L3/2+(-3*mi3-1)*L1*L2/2)
			-c2*(L1*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L1*L3/2+(3*mi2+1)*L1*L2/2))+b3*(-c2*(3*(1-mi2)*L1*L2+2*L1)-c3*(3*mi3+1)*L1*L2)))
		/(4*delta*delta);
    B[0][3] = 	       (b1*(b2*(2*(-L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2-(-3*mi3-1)*L2*L3/2+3*(1-mi1)*L2*L3/2
									 -3*(1-mi3)*L1*L3/2+(3*mi1+1)*L1*L3/2-2*L1)
		       +1)
		   +2*b3
		     *(-L2*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+L2*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2-(3*mi3+1)*L2*L3/2+(-3*mi1-1)*L2*L3/2-3*(1-mi3)*L1*L2/2
								     +(3*mi1+1)*L1*L2/2)+2*b1*(-3*(1-mi3)*L2*L3+(3*mi1+1)*L2*L3-2*L2))
		+b2*(b1*(2*(-L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2-(-3*mi3-1)*L2*L3/2+3*(1-mi1)*L2*L3/2
									  -3*(1-mi3)*L1*L3/2+(3*mi1+1)*L1*L3/2-2*L1)
			+1)
		    +b3*(2*(-L1*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+L1*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2-(3*mi3+1)*L1*L3/2+(-3*mi1-1)*L1*L3/2
									  -(-3*mi3-1)*L1*L2/2+3*(1-mi1)*L1*L2/2+2*L2)
			-1)+2*b2*(-(-3*mi3-1)*L1*L3+3*(1-mi1)*L1*L3+2*L3))
		+b3*(b2*(2*(-L1*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+L1*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2-(3*mi3+1)*L1*L3/2+(-3*mi1-1)*L1*L3/2
									  -(-3*mi3-1)*L1*L2/2+3*(1-mi1)*L1*L2/2+2*L2)
			-1)
		    +2*b1
		      *(-L2*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+L2*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2-(3*mi3+1)*L2*L3/2+(-3*mi1-1)*L2*L3/2-3*(1-mi3)*L1*L2/2
								      +(3*mi1+1)*L1*L2/2)+2*b3*((-3*mi1-1)*L1*L2-(3*mi3+1)*L1*L2)))
		/(4*delta*delta);
    B[0][4] = 	       (b1*(b2*(-b3*(L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(-3*mi3-1)*L2*L3/2+3*(1-mi3)*L1*L3/2+2*L1-1)
		       -b1*(L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+3*(1-mi1)*L2*L3/2+(3*mi1+1)*L1*L3/2))
		   +b3*(-b3*(L2*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L2*L3/2+3*(1-mi3)*L1*L2/2)
		       -b1*(L2*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L2*L3/2+(3*mi1+1)*L1*L2/2))+b1*(-b3*(3*(1-mi3)*L2*L3+2*L2)-b1*(3*mi1+1)*L2*L3))
		+b2*(b1*(-b3*(L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(-3*mi3-1)*L2*L3/2+3*(1-mi3)*L1*L3/2+2*L1-1)
			-b1*(L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+3*(1-mi1)*L2*L3/2+(3*mi1+1)*L1*L3/2))
		    +b3*(-b3*(L1*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L1*L3/2+(-3*mi3-1)*L1*L2/2)
			-b1*(L1*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L1*L3/2+3*(1-mi1)*L1*L2/2+2*L2))+b2*(-b1*(3*(1-mi1)*L1*L3+2*L3)-b3*(-3*mi3-1)*L1*L3))
		+b3*(b1*(-b3*(L2*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L2*L3/2+3*(1-mi3)*L1*L2/2)
			-b1*(L2*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L2*L3/2+(3*mi1+1)*L1*L2/2))
		    +b2*(-b3*(L1*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L1*L3/2+(-3*mi3-1)*L1*L2/2)
			-b1*(L1*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L1*L3/2+3*(1-mi1)*L1*L2/2+2*L2))+b3*(-b3*(3*mi3+1)*L1*L2-b1*(-3*mi1-1)*L1*L2)))
		/(4*delta*delta);
    B[0][5] = 	       (b1*(b2*(-c3*(L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(-3*mi3-1)*L2*L3/2+3*(1-mi3)*L1*L3/2+2*L1-1)
		       -c1*(L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+3*(1-mi1)*L2*L3/2+(3*mi1+1)*L1*L3/2))
		   +b3*(-c3*(L2*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L2*L3/2+3*(1-mi3)*L1*L2/2)
		       -c1*(L2*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L2*L3/2+(3*mi1+1)*L1*L2/2))+b1*(-c3*(3*(1-mi3)*L2*L3+2*L2)-c1*(3*mi1+1)*L2*L3))
		+b2*(b1*(-c3*(L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(-3*mi3-1)*L2*L3/2+3*(1-mi3)*L1*L3/2+2*L1-1)
			-c1*(L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+3*(1-mi1)*L2*L3/2+(3*mi1+1)*L1*L3/2))
		    +b3*(-c3*(L1*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L1*L3/2+(-3*mi3-1)*L1*L2/2)
			-c1*(L1*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L1*L3/2+3*(1-mi1)*L1*L2/2+2*L2))+b2*(-c1*(3*(1-mi1)*L1*L3+2*L3)-c3*(-3*mi3-1)*L1*L3))
		+b3*(b1*(-c3*(L2*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L2*L3/2+3*(1-mi3)*L1*L2/2)
			-c1*(L2*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L2*L3/2+(3*mi1+1)*L1*L2/2))
		    +b2*(-c3*(L1*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L1*L3/2+(-3*mi3-1)*L1*L2/2)
			-c1*(L1*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L1*L3/2+3*(1-mi1)*L1*L2/2+2*L2))+b3*(-c3*(3*mi3+1)*L1*L2-c1*(-3*mi1-1)*L1*L2)))
		/(4*delta*delta);
    B[0][6] = 	       (b1*(b3*(2*(L2*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2-L2*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+3*(1-mi2)*L2*L3/2-(-3*mi1-1)*L2*L3/2+2*L3
									+(-3*mi2-1)*L1*L2/2-(3*mi1+1)*L1*L2/2)
		       -1)
		   +2*b2
		     *(L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2-L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(3*mi2+1)*L2*L3/2-3*(1-mi1)*L2*L3/2+(-3*mi2-1)*L1*L3/2
								    -(3*mi1+1)*L1*L3/2)+2*b1*((-3*mi2-1)*L2*L3-(3*mi1+1)*L2*L3))
		+b3*(b1*(2*(L2*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2-L2*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+3*(1-mi2)*L2*L3/2-(-3*mi1-1)*L2*L3/2+2*L3
									 +(-3*mi2-1)*L1*L2/2-(3*mi1+1)*L1*L2/2)
			-1)
		    +b2*(2*(L1*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2-L1*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+3*(1-mi2)*L1*L3/2-(-3*mi1-1)*L1*L3/2
									 +(3*mi2+1)*L1*L2/2-3*(1-mi1)*L1*L2/2-2*L2)
			+1)+2*b3*(3*(1-mi2)*L1*L2-(-3*mi1-1)*L1*L2+2*L1))
		+b2*(b3*(2*(L1*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2-L1*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+3*(1-mi2)*L1*L3/2-(-3*mi1-1)*L1*L3/2
									 +(3*mi2+1)*L1*L2/2-3*(1-mi1)*L1*L2/2-2*L2)
			+1)
		    +2*b1
		      *(L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2-L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(3*mi2+1)*L2*L3/2-3*(1-mi1)*L2*L3/2+(-3*mi2-1)*L1*L3/2
								     -(3*mi1+1)*L1*L3/2)+2*b2*((3*mi2+1)*L1*L3-3*(1-mi1)*L1*L3-2*L3)))
		/(4*delta*delta);
    B[0][7] = 	       (b1*(b2*(-b2*(L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(3*mi2+1)*L2*L3/2+(-3*mi2-1)*L1*L3/2)
		       -b1*(L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+3*(1-mi1)*L2*L3/2+(3*mi1+1)*L1*L3/2))
		   +b3*(-b2*(L2*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L2*L3/2+2*L3+(-3*mi2-1)*L1*L2/2)
		       -b1*(L2*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L2*L3/2+(3*mi1+1)*L1*L2/2))+b1*(-b2*(-3*mi2-1)*L2*L3-b1*(3*mi1+1)*L2*L3))
		+b2*(b1*(-b2*(L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(3*mi2+1)*L2*L3/2+(-3*mi2-1)*L1*L3/2)
			-b1*(L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+3*(1-mi1)*L2*L3/2+(3*mi1+1)*L1*L3/2))
		    +b3*(-b2*(L1*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L1*L3/2+(3*mi2+1)*L1*L2/2)
			-b1*(L1*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L1*L3/2+3*(1-mi1)*L1*L2/2+2*L2-1))+b2*(-b1*(3*(1-mi1)*L1*L3+2*L3)-b2*(3*mi2+1)*L1*L3))
		+b3*(b1*(-b2*(L2*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L2*L3/2+2*L3+(-3*mi2-1)*L1*L2/2)
			-b1*(L2*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L2*L3/2+(3*mi1+1)*L1*L2/2))
		    +b2*(-b2*(L1*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L1*L3/2+(3*mi2+1)*L1*L2/2)
			-b1*(L1*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L1*L3/2+3*(1-mi1)*L1*L2/2+2*L2-1))
		    +b3*(-b2*(3*(1-mi2)*L1*L2+2*L1)-b1*(-3*mi1-1)*L1*L2)))
		/(4*delta*delta);
    B[0][8] = 	       (b1*(b2*(-c2*(L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(3*mi2+1)*L2*L3/2+(-3*mi2-1)*L1*L3/2)
		       -c1*(L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+3*(1-mi1)*L2*L3/2+(3*mi1+1)*L1*L3/2))
		   +b3*(-c2*(L2*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L2*L3/2+2*L3+(-3*mi2-1)*L1*L2/2)
		       -c1*(L2*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L2*L3/2+(3*mi1+1)*L1*L2/2))+b1*(-c2*(-3*mi2-1)*L2*L3-c1*(3*mi1+1)*L2*L3))
		+b2*(b1*(-c2*(L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(3*mi2+1)*L2*L3/2+(-3*mi2-1)*L1*L3/2)
			-c1*(L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+3*(1-mi1)*L2*L3/2+(3*mi1+1)*L1*L3/2))
		    +b3*(-c2*(L1*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L1*L3/2+(3*mi2+1)*L1*L2/2)
			-c1*(L1*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L1*L3/2+3*(1-mi1)*L1*L2/2+2*L2-1))+b2*(-c1*(3*(1-mi1)*L1*L3+2*L3)-c2*(3*mi2+1)*L1*L3))
		+b3*(b1*(-c2*(L2*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L2*L3/2+2*L3+(-3*mi2-1)*L1*L2/2)
			-c1*(L2*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L2*L3/2+(3*mi1+1)*L1*L2/2))
		    +b2*(-c2*(L1*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L1*L3/2+(3*mi2+1)*L1*L2/2)
			-c1*(L1*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L1*L3/2+3*(1-mi1)*L1*L2/2+2*L2-1))
		    +b3*(-c2*(3*(1-mi2)*L1*L2+2*L1)-c1*(-3*mi1-1)*L1*L2)))
		/(4*delta*delta)	      ;
    B[1][0] = (c1*(c2*(2*(L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2-L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(-3*mi3-1)*L2*L3/2-(3*mi2+1)*L2*L3/2+3*(1-mi3)*L1*L3/2
									-(-3*mi2-1)*L1*L3/2+2*L1)
		       -1)
		   +c3*(2*(L2*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2-L2*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(3*mi3+1)*L2*L3/2-3*(1-mi2)*L2*L3/2-2*L3
									+3*(1-mi3)*L1*L2/2-(-3*mi2-1)*L1*L2/2)
		       +1)+2*c1*(3*(1-mi3)*L2*L3-(-3*mi2-1)*L2*L3+2*L2))
		+c2*(c1*(2*(L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2-L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(-3*mi3-1)*L2*L3/2-(3*mi2+1)*L2*L3/2
									 +3*(1-mi3)*L1*L3/2-(-3*mi2-1)*L1*L3/2+2*L1)
			-1)
		    +2*c3
		      *(L1*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2-L1*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(3*mi3+1)*L1*L3/2-3*(1-mi2)*L1*L3/2+(-3*mi3-1)*L1*L2/2
								     -(3*mi2+1)*L1*L2/2)+2*c2*((-3*mi3-1)*L1*L3-(3*mi2+1)*L1*L3))
		+c3*(c1*(2*(L2*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2-L2*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(3*mi3+1)*L2*L3/2-3*(1-mi2)*L2*L3/2-2*L3
									 +3*(1-mi3)*L1*L2/2-(-3*mi2-1)*L1*L2/2)
			+1)
		    +2*c2
		      *(L1*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2-L1*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(3*mi3+1)*L1*L3/2-3*(1-mi2)*L1*L3/2+(-3*mi3-1)*L1*L2/2
								     -(3*mi2+1)*L1*L2/2)+2*c3*((3*mi3+1)*L1*L2-3*(1-mi2)*L1*L2-2*L1)))
		/(4*delta*delta);
    B[1][1] = 	       (c1*(c2*(-b3*(L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(-3*mi3-1)*L2*L3/2+3*(1-mi3)*L1*L3/2+2*L1)
		       -b2*(L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(3*mi2+1)*L2*L3/2+(-3*mi2-1)*L1*L3/2))
		   +c3*(-b3*(L2*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L2*L3/2+3*(1-mi3)*L1*L2/2)
		       -b2*(L2*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L2*L3/2+2*L3+(-3*mi2-1)*L1*L2/2-1))+c1*(-b3*(3*(1-mi3)*L2*L3+2*L2)-b2*(-3*mi2-1)*L2*L3))
		+c2*(c1*(-b3*(L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(-3*mi3-1)*L2*L3/2+3*(1-mi3)*L1*L3/2+2*L1)
			-b2*(L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(3*mi2+1)*L2*L3/2+(-3*mi2-1)*L1*L3/2))
		    +c3*(-b3*(L1*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L1*L3/2+(-3*mi3-1)*L1*L2/2)
			-b2*(L1*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L1*L3/2+(3*mi2+1)*L1*L2/2))+c2*(-b3*(-3*mi3-1)*L1*L3-b2*(3*mi2+1)*L1*L3))
		+c3*(c1*(-b3*(L2*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L2*L3/2+3*(1-mi3)*L1*L2/2)
			-b2*(L2*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L2*L3/2+2*L3+(-3*mi2-1)*L1*L2/2-1))
		    +c2*(-b3*(L1*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L1*L3/2+(-3*mi3-1)*L1*L2/2)
			-b2*(L1*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L1*L3/2+(3*mi2+1)*L1*L2/2))+c3*(-b2*(3*(1-mi2)*L1*L2+2*L1)-b3*(3*mi3+1)*L1*L2)))
		/(4*delta*delta);
    B[1][2] = 	       (c1*(c2*(-c3*(L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(-3*mi3-1)*L2*L3/2+3*(1-mi3)*L1*L3/2+2*L1)
		       -c2*(L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(3*mi2+1)*L2*L3/2+(-3*mi2-1)*L1*L3/2))
		   +c3*(-c3*(L2*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L2*L3/2+3*(1-mi3)*L1*L2/2)
		       -c2*(L2*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L2*L3/2+2*L3+(-3*mi2-1)*L1*L2/2-1))+c1*(-c3*(3*(1-mi3)*L2*L3+2*L2)-c2*(-3*mi2-1)*L2*L3))
		+c2*(c1*(-c3*(L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(-3*mi3-1)*L2*L3/2+3*(1-mi3)*L1*L3/2+2*L1)
			-c2*(L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(3*mi2+1)*L2*L3/2+(-3*mi2-1)*L1*L3/2))
		    +c3*(-c3*(L1*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L1*L3/2+(-3*mi3-1)*L1*L2/2)
			-c2*(L1*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L1*L3/2+(3*mi2+1)*L1*L2/2))+c2*(-c3*(-3*mi3-1)*L1*L3-c2*(3*mi2+1)*L1*L3))
		+c3*(c1*(-c3*(L2*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L2*L3/2+3*(1-mi3)*L1*L2/2)
			-c2*(L2*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L2*L3/2+2*L3+(-3*mi2-1)*L1*L2/2-1))
		    +c2*(-c3*(L1*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L1*L3/2+(-3*mi3-1)*L1*L2/2)
			-c2*(L1*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L1*L3/2+(3*mi2+1)*L1*L2/2))+c3*(-c2*(3*(1-mi2)*L1*L2+2*L1)-c3*(3*mi3+1)*L1*L2)))
		/(4*delta*delta);
    B[1][3] = 	       (c1*(c2*(2*(-L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2-(-3*mi3-1)*L2*L3/2+3*(1-mi1)*L2*L3/2
									 -3*(1-mi3)*L1*L3/2+(3*mi1+1)*L1*L3/2-2*L1)
		       +1)
		   +2*c3
		     *(-L2*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+L2*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2-(3*mi3+1)*L2*L3/2+(-3*mi1-1)*L2*L3/2-3*(1-mi3)*L1*L2/2
								     +(3*mi1+1)*L1*L2/2)+2*c1*(-3*(1-mi3)*L2*L3+(3*mi1+1)*L2*L3-2*L2))
		+c2*(c1*(2*(-L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2-(-3*mi3-1)*L2*L3/2+3*(1-mi1)*L2*L3/2
									  -3*(1-mi3)*L1*L3/2+(3*mi1+1)*L1*L3/2-2*L1)
			+1)
		    +c3*(2*(-L1*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+L1*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2-(3*mi3+1)*L1*L3/2+(-3*mi1-1)*L1*L3/2
									  -(-3*mi3-1)*L1*L2/2+3*(1-mi1)*L1*L2/2+2*L2)
			-1)+2*c2*(-(-3*mi3-1)*L1*L3+3*(1-mi1)*L1*L3+2*L3))
		+c3*(c2*(2*(-L1*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+L1*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2-(3*mi3+1)*L1*L3/2+(-3*mi1-1)*L1*L3/2
									  -(-3*mi3-1)*L1*L2/2+3*(1-mi1)*L1*L2/2+2*L2)
			-1)
		    +2*c1
		      *(-L2*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+L2*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2-(3*mi3+1)*L2*L3/2+(-3*mi1-1)*L2*L3/2-3*(1-mi3)*L1*L2/2
								      +(3*mi1+1)*L1*L2/2)+2*c3*((-3*mi1-1)*L1*L2-(3*mi3+1)*L1*L2)))
		/(4*delta*delta);
    B[1][4] = 	       (c1*(c2*(-b3*(L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(-3*mi3-1)*L2*L3/2+3*(1-mi3)*L1*L3/2+2*L1-1)
		       -b1*(L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+3*(1-mi1)*L2*L3/2+(3*mi1+1)*L1*L3/2))
		   +c3*(-b3*(L2*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L2*L3/2+3*(1-mi3)*L1*L2/2)
		       -b1*(L2*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L2*L3/2+(3*mi1+1)*L1*L2/2))+c1*(-b3*(3*(1-mi3)*L2*L3+2*L2)-b1*(3*mi1+1)*L2*L3))
		+c2*(c1*(-b3*(L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(-3*mi3-1)*L2*L3/2+3*(1-mi3)*L1*L3/2+2*L1-1)
			-b1*(L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+3*(1-mi1)*L2*L3/2+(3*mi1+1)*L1*L3/2))
		    +c3*(-b3*(L1*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L1*L3/2+(-3*mi3-1)*L1*L2/2)
			-b1*(L1*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L1*L3/2+3*(1-mi1)*L1*L2/2+2*L2))+c2*(-b1*(3*(1-mi1)*L1*L3+2*L3)-b3*(-3*mi3-1)*L1*L3))
		+c3*(c1*(-b3*(L2*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L2*L3/2+3*(1-mi3)*L1*L2/2)
			-b1*(L2*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L2*L3/2+(3*mi1+1)*L1*L2/2))
		    +c2*(-b3*(L1*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L1*L3/2+(-3*mi3-1)*L1*L2/2)
			-b1*(L1*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L1*L3/2+3*(1-mi1)*L1*L2/2+2*L2))+c3*(-b3*(3*mi3+1)*L1*L2-b1*(-3*mi1-1)*L1*L2)))
		/(4*delta*delta);
    B[1][5] = 	       (c1*(c2*(-c3*(L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(-3*mi3-1)*L2*L3/2+3*(1-mi3)*L1*L3/2+2*L1-1)
		       -c1*(L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+3*(1-mi1)*L2*L3/2+(3*mi1+1)*L1*L3/2))
		   +c3*(-c3*(L2*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L2*L3/2+3*(1-mi3)*L1*L2/2)
		       -c1*(L2*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L2*L3/2+(3*mi1+1)*L1*L2/2))+c1*(-c3*(3*(1-mi3)*L2*L3+2*L2)-c1*(3*mi1+1)*L2*L3))
		+c2*(c1*(-c3*(L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(-3*mi3-1)*L2*L3/2+3*(1-mi3)*L1*L3/2+2*L1-1)
			-c1*(L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+3*(1-mi1)*L2*L3/2+(3*mi1+1)*L1*L3/2))
		    +c3*(-c3*(L1*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L1*L3/2+(-3*mi3-1)*L1*L2/2)
			-c1*(L1*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L1*L3/2+3*(1-mi1)*L1*L2/2+2*L2))+c2*(-c1*(3*(1-mi1)*L1*L3+2*L3)-c3*(-3*mi3-1)*L1*L3))
		+c3*(c1*(-c3*(L2*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L2*L3/2+3*(1-mi3)*L1*L2/2)
			-c1*(L2*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L2*L3/2+(3*mi1+1)*L1*L2/2))
		    +c2*(-c3*(L1*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L1*L3/2+(-3*mi3-1)*L1*L2/2)
			-c1*(L1*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L1*L3/2+3*(1-mi1)*L1*L2/2+2*L2))+c3*(-c3*(3*mi3+1)*L1*L2-c1*(-3*mi1-1)*L1*L2)))
		/(4*delta*delta);
    B[1][6] = 	       (c1*(c3*(2*(L2*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2-L2*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+3*(1-mi2)*L2*L3/2-(-3*mi1-1)*L2*L3/2+2*L3
									+(-3*mi2-1)*L1*L2/2-(3*mi1+1)*L1*L2/2)
		       -1)
		   +2*c2
		     *(L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2-L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(3*mi2+1)*L2*L3/2-3*(1-mi1)*L2*L3/2+(-3*mi2-1)*L1*L3/2
								    -(3*mi1+1)*L1*L3/2)+2*c1*((-3*mi2-1)*L2*L3-(3*mi1+1)*L2*L3))
		+c3*(c1*(2*(L2*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2-L2*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+3*(1-mi2)*L2*L3/2-(-3*mi1-1)*L2*L3/2+2*L3
									 +(-3*mi2-1)*L1*L2/2-(3*mi1+1)*L1*L2/2)
			-1)
		    +c2*(2*(L1*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2-L1*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+3*(1-mi2)*L1*L3/2-(-3*mi1-1)*L1*L3/2
									 +(3*mi2+1)*L1*L2/2-3*(1-mi1)*L1*L2/2-2*L2)
			+1)+2*c3*(3*(1-mi2)*L1*L2-(-3*mi1-1)*L1*L2+2*L1))
		+c2*(c3*(2*(L1*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2-L1*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+3*(1-mi2)*L1*L3/2-(-3*mi1-1)*L1*L3/2
									 +(3*mi2+1)*L1*L2/2-3*(1-mi1)*L1*L2/2-2*L2)
			+1)
		    +2*c1
		      *(L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2-L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(3*mi2+1)*L2*L3/2-3*(1-mi1)*L2*L3/2+(-3*mi2-1)*L1*L3/2
								     -(3*mi1+1)*L1*L3/2)+2*c2*((3*mi2+1)*L1*L3-3*(1-mi1)*L1*L3-2*L3)))
		/(4*delta*delta);
    B[1][7] = 	       (c1*(c2*(-b2*(L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(3*mi2+1)*L2*L3/2+(-3*mi2-1)*L1*L3/2)
		       -b1*(L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+3*(1-mi1)*L2*L3/2+(3*mi1+1)*L1*L3/2))
		   +c3*(-b2*(L2*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L2*L3/2+2*L3+(-3*mi2-1)*L1*L2/2)
		       -b1*(L2*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L2*L3/2+(3*mi1+1)*L1*L2/2))+c1*(-b2*(-3*mi2-1)*L2*L3-b1*(3*mi1+1)*L2*L3))
		+c2*(c1*(-b2*(L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(3*mi2+1)*L2*L3/2+(-3*mi2-1)*L1*L3/2)
			-b1*(L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+3*(1-mi1)*L2*L3/2+(3*mi1+1)*L1*L3/2))
		    +c3*(-b2*(L1*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L1*L3/2+(3*mi2+1)*L1*L2/2)
			-b1*(L1*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L1*L3/2+3*(1-mi1)*L1*L2/2+2*L2-1))+c2*(-b1*(3*(1-mi1)*L1*L3+2*L3)-b2*(3*mi2+1)*L1*L3))
		+c3*(c1*(-b2*(L2*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L2*L3/2+2*L3+(-3*mi2-1)*L1*L2/2)
			-b1*(L2*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L2*L3/2+(3*mi1+1)*L1*L2/2))
		    +c2*(-b2*(L1*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L1*L3/2+(3*mi2+1)*L1*L2/2)
			-b1*(L1*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L1*L3/2+3*(1-mi1)*L1*L2/2+2*L2-1))
		    +c3*(-b2*(3*(1-mi2)*L1*L2+2*L1)-b1*(-3*mi1-1)*L1*L2)))
		/(4*delta*delta);
    B[1][8] = 	       (c1*(c2*(-c2*(L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(3*mi2+1)*L2*L3/2+(-3*mi2-1)*L1*L3/2)
		       -c1*(L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+3*(1-mi1)*L2*L3/2+(3*mi1+1)*L1*L3/2))
		   +c3*(-c2*(L2*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L2*L3/2+2*L3+(-3*mi2-1)*L1*L2/2)
		       -c1*(L2*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L2*L3/2+(3*mi1+1)*L1*L2/2))+c1*(-c2*(-3*mi2-1)*L2*L3-c1*(3*mi1+1)*L2*L3))
		+c2*(c1*(-c2*(L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(3*mi2+1)*L2*L3/2+(-3*mi2-1)*L1*L3/2)
			-c1*(L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+3*(1-mi1)*L2*L3/2+(3*mi1+1)*L1*L3/2))
		    +c3*(-c2*(L1*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L1*L3/2+(3*mi2+1)*L1*L2/2)
			-c1*(L1*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L1*L3/2+3*(1-mi1)*L1*L2/2+2*L2-1))+c2*(-c1*(3*(1-mi1)*L1*L3+2*L3)-c2*(3*mi2+1)*L1*L3))
		+c3*(c1*(-c2*(L2*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L2*L3/2+2*L3+(-3*mi2-1)*L1*L2/2)
			-c1*(L2*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L2*L3/2+(3*mi1+1)*L1*L2/2))
		    +c2*(-c2*(L1*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L1*L3/2+(3*mi2+1)*L1*L2/2)
			-c1*(L1*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L1*L3/2+3*(1-mi1)*L1*L2/2+2*L2-1))
		    +c3*(-c2*(3*(1-mi2)*L1*L2+2*L1)-c1*(-3*mi1-1)*L1*L2)))
		/(4*delta*delta)	      ;
    B[2][0] = (c1*(b2*(2*(L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2-L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(-3*mi3-1)*L2*L3/2-(3*mi2+1)*L2*L3/2+3*(1-mi3)*L1*L3/2
									-(-3*mi2-1)*L1*L3/2+2*L1)
		       -1)
		   +b3*(2*(L2*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2-L2*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(3*mi3+1)*L2*L3/2-3*(1-mi2)*L2*L3/2-2*L3
									+3*(1-mi3)*L1*L2/2-(-3*mi2-1)*L1*L2/2)
		       +1)+2*b1*(3*(1-mi3)*L2*L3-(-3*mi2-1)*L2*L3+2*L2))
		+c2*(b1*(2*(L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2-L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(-3*mi3-1)*L2*L3/2-(3*mi2+1)*L2*L3/2
									 +3*(1-mi3)*L1*L3/2-(-3*mi2-1)*L1*L3/2+2*L1)
			-1)
		    +2*b3
		      *(L1*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2-L1*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(3*mi3+1)*L1*L3/2-3*(1-mi2)*L1*L3/2+(-3*mi3-1)*L1*L2/2
								     -(3*mi2+1)*L1*L2/2)+2*b2*((-3*mi3-1)*L1*L3-(3*mi2+1)*L1*L3))
		+c3*(b1*(2*(L2*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2-L2*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(3*mi3+1)*L2*L3/2-3*(1-mi2)*L2*L3/2-2*L3
									 +3*(1-mi3)*L1*L2/2-(-3*mi2-1)*L1*L2/2)
			+1)
		    +2*b2
		      *(L1*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2-L1*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(3*mi3+1)*L1*L3/2-3*(1-mi2)*L1*L3/2+(-3*mi3-1)*L1*L2/2
								     -(3*mi2+1)*L1*L2/2)+2*b3*((3*mi3+1)*L1*L2-3*(1-mi2)*L1*L2-2*L1)))
		/(2*delta*delta);
    B[2][1] = 	       (c1*(b2*(-b3*(L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(-3*mi3-1)*L2*L3/2+3*(1-mi3)*L1*L3/2+2*L1)
		       -b2*(L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(3*mi2+1)*L2*L3/2+(-3*mi2-1)*L1*L3/2))
		   +b3*(-b3*(L2*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L2*L3/2+3*(1-mi3)*L1*L2/2)
		       -b2*(L2*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L2*L3/2+2*L3+(-3*mi2-1)*L1*L2/2-1))+b1*(-b3*(3*(1-mi3)*L2*L3+2*L2)-b2*(-3*mi2-1)*L2*L3))
		+c2*(b1*(-b3*(L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(-3*mi3-1)*L2*L3/2+3*(1-mi3)*L1*L3/2+2*L1)
			-b2*(L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(3*mi2+1)*L2*L3/2+(-3*mi2-1)*L1*L3/2))
		    +b3*(-b3*(L1*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L1*L3/2+(-3*mi3-1)*L1*L2/2)
			-b2*(L1*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L1*L3/2+(3*mi2+1)*L1*L2/2))+b2*(-b3*(-3*mi3-1)*L1*L3-b2*(3*mi2+1)*L1*L3))
		+c3*(b1*(-b3*(L2*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L2*L3/2+3*(1-mi3)*L1*L2/2)
			-b2*(L2*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L2*L3/2+2*L3+(-3*mi2-1)*L1*L2/2-1))
		    +b2*(-b3*(L1*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L1*L3/2+(-3*mi3-1)*L1*L2/2)
			-b2*(L1*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L1*L3/2+(3*mi2+1)*L1*L2/2))+b3*(-b2*(3*(1-mi2)*L1*L2+2*L1)-b3*(3*mi3+1)*L1*L2)))
		/(2*delta*delta);
    B[2][2] = 	       (c1*(b2*(-c3*(L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(-3*mi3-1)*L2*L3/2+3*(1-mi3)*L1*L3/2+2*L1)
		       -c2*(L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(3*mi2+1)*L2*L3/2+(-3*mi2-1)*L1*L3/2))
		   +b3*(-c3*(L2*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L2*L3/2+3*(1-mi3)*L1*L2/2)
		       -c2*(L2*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L2*L3/2+2*L3+(-3*mi2-1)*L1*L2/2-1))+b1*(-c3*(3*(1-mi3)*L2*L3+2*L2)-c2*(-3*mi2-1)*L2*L3))
		+c2*(b1*(-c3*(L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(-3*mi3-1)*L2*L3/2+3*(1-mi3)*L1*L3/2+2*L1)
			-c2*(L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(3*mi2+1)*L2*L3/2+(-3*mi2-1)*L1*L3/2))
		    +b3*(-c3*(L1*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L1*L3/2+(-3*mi3-1)*L1*L2/2)
			-c2*(L1*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L1*L3/2+(3*mi2+1)*L1*L2/2))+b2*(-c3*(-3*mi3-1)*L1*L3-c2*(3*mi2+1)*L1*L3))
		+c3*(b1*(-c3*(L2*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L2*L3/2+3*(1-mi3)*L1*L2/2)
			-c2*(L2*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L2*L3/2+2*L3+(-3*mi2-1)*L1*L2/2-1))
		    +b2*(-c3*(L1*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L1*L3/2+(-3*mi3-1)*L1*L2/2)
			-c2*(L1*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L1*L3/2+(3*mi2+1)*L1*L2/2))+b3*(-c2*(3*(1-mi2)*L1*L2+2*L1)-c3*(3*mi3+1)*L1*L2)))
		/(2*delta*delta);
    B[2][3] = 	       (c1*(b2*(2*(-L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2-(-3*mi3-1)*L2*L3/2+3*(1-mi1)*L2*L3/2
									 -3*(1-mi3)*L1*L3/2+(3*mi1+1)*L1*L3/2-2*L1)
		       +1)
		   +2*b3
		     *(-L2*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+L2*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2-(3*mi3+1)*L2*L3/2+(-3*mi1-1)*L2*L3/2-3*(1-mi3)*L1*L2/2
								     +(3*mi1+1)*L1*L2/2)+2*b1*(-3*(1-mi3)*L2*L3+(3*mi1+1)*L2*L3-2*L2))
		+c2*(b1*(2*(-L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2-(-3*mi3-1)*L2*L3/2+3*(1-mi1)*L2*L3/2
									  -3*(1-mi3)*L1*L3/2+(3*mi1+1)*L1*L3/2-2*L1)
			+1)
		    +b3*(2*(-L1*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+L1*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2-(3*mi3+1)*L1*L3/2+(-3*mi1-1)*L1*L3/2
									  -(-3*mi3-1)*L1*L2/2+3*(1-mi1)*L1*L2/2+2*L2)
			-1)+2*b2*(-(-3*mi3-1)*L1*L3+3*(1-mi1)*L1*L3+2*L3))
		+c3*(b2*(2*(-L1*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+L1*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2-(3*mi3+1)*L1*L3/2+(-3*mi1-1)*L1*L3/2
									  -(-3*mi3-1)*L1*L2/2+3*(1-mi1)*L1*L2/2+2*L2)
			-1)
		    +2*b1
		      *(-L2*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+L2*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2-(3*mi3+1)*L2*L3/2+(-3*mi1-1)*L2*L3/2-3*(1-mi3)*L1*L2/2
								      +(3*mi1+1)*L1*L2/2)+2*b3*((-3*mi1-1)*L1*L2-(3*mi3+1)*L1*L2)))
		/(2*delta*delta);
    B[2][4] = 	       (c1*(b2*(-b3*(L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(-3*mi3-1)*L2*L3/2+3*(1-mi3)*L1*L3/2+2*L1-1)
		       -b1*(L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+3*(1-mi1)*L2*L3/2+(3*mi1+1)*L1*L3/2))
		   +b3*(-b3*(L2*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L2*L3/2+3*(1-mi3)*L1*L2/2)
		       -b1*(L2*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L2*L3/2+(3*mi1+1)*L1*L2/2))+b1*(-b3*(3*(1-mi3)*L2*L3+2*L2)-b1*(3*mi1+1)*L2*L3))
		+c2*(b1*(-b3*(L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(-3*mi3-1)*L2*L3/2+3*(1-mi3)*L1*L3/2+2*L1-1)
			-b1*(L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+3*(1-mi1)*L2*L3/2+(3*mi1+1)*L1*L3/2))
		    +b3*(-b3*(L1*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L1*L3/2+(-3*mi3-1)*L1*L2/2)
			-b1*(L1*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L1*L3/2+3*(1-mi1)*L1*L2/2+2*L2))+b2*(-b1*(3*(1-mi1)*L1*L3+2*L3)-b3*(-3*mi3-1)*L1*L3))
		+c3*(b1*(-b3*(L2*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L2*L3/2+3*(1-mi3)*L1*L2/2)
			-b1*(L2*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L2*L3/2+(3*mi1+1)*L1*L2/2))
		    +b2*(-b3*(L1*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L1*L3/2+(-3*mi3-1)*L1*L2/2)
			-b1*(L1*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L1*L3/2+3*(1-mi1)*L1*L2/2+2*L2))+b3*(-b3*(3*mi3+1)*L1*L2-b1*(-3*mi1-1)*L1*L2)))
		/(2*delta*delta);
    B[2][5] = 	       (c1*(b2*(-c3*(L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(-3*mi3-1)*L2*L3/2+3*(1-mi3)*L1*L3/2+2*L1-1)
		       -c1*(L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+3*(1-mi1)*L2*L3/2+(3*mi1+1)*L1*L3/2))
		   +b3*(-c3*(L2*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L2*L3/2+3*(1-mi3)*L1*L2/2)
		       -c1*(L2*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L2*L3/2+(3*mi1+1)*L1*L2/2))+b1*(-c3*(3*(1-mi3)*L2*L3+2*L2)-c1*(3*mi1+1)*L2*L3))
		+c2*(b1*(-c3*(L3*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(-3*mi3-1)*L2*L3/2+3*(1-mi3)*L1*L3/2+2*L1-1)
			-c1*(L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+3*(1-mi1)*L2*L3/2+(3*mi1+1)*L1*L3/2))
		    +b3*(-c3*(L1*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L1*L3/2+(-3*mi3-1)*L1*L2/2)
			-c1*(L1*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L1*L3/2+3*(1-mi1)*L1*L2/2+2*L2))+b2*(-c1*(3*(1-mi1)*L1*L3+2*L3)-c3*(-3*mi3-1)*L1*L3))
		+c3*(b1*(-c3*(L2*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L2*L3/2+3*(1-mi3)*L1*L2/2)
			-c1*(L2*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L2*L3/2+(3*mi1+1)*L1*L2/2))
		    +b2*(-c3*(L1*((3*mi3+1)*L3-(3*mi3+1)*L2+3*(1-mi3)*L1)/2+(3*mi3+1)*L1*L3/2+(-3*mi3-1)*L1*L2/2)
			-c1*(L1*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L1*L3/2+3*(1-mi1)*L1*L2/2+2*L2))+b3*(-c3*(3*mi3+1)*L1*L2-c1*(-3*mi1-1)*L1*L2)))
		/(2*delta*delta);
    B[2][6] = 	       (c1*(b3*(2*(L2*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2-L2*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+3*(1-mi2)*L2*L3/2-(-3*mi1-1)*L2*L3/2+2*L3
									+(-3*mi2-1)*L1*L2/2-(3*mi1+1)*L1*L2/2)
		       -1)
		   +2*b2
		     *(L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2-L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(3*mi2+1)*L2*L3/2-3*(1-mi1)*L2*L3/2+(-3*mi2-1)*L1*L3/2
								    -(3*mi1+1)*L1*L3/2)+2*b1*((-3*mi2-1)*L2*L3-(3*mi1+1)*L2*L3))
		+c3*(b1*(2*(L2*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2-L2*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+3*(1-mi2)*L2*L3/2-(-3*mi1-1)*L2*L3/2+2*L3
									 +(-3*mi2-1)*L1*L2/2-(3*mi1+1)*L1*L2/2)
			-1)
		    +b2*(2*(L1*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2-L1*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+3*(1-mi2)*L1*L3/2-(-3*mi1-1)*L1*L3/2
									 +(3*mi2+1)*L1*L2/2-3*(1-mi1)*L1*L2/2-2*L2)
			+1)+2*b3*(3*(1-mi2)*L1*L2-(-3*mi1-1)*L1*L2+2*L1))
		+c2*(b3*(2*(L1*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2-L1*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+3*(1-mi2)*L1*L3/2-(-3*mi1-1)*L1*L3/2
									 +(3*mi2+1)*L1*L2/2-3*(1-mi1)*L1*L2/2-2*L2)
			+1)
		    +2*b1
		      *(L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2-L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(3*mi2+1)*L2*L3/2-3*(1-mi1)*L2*L3/2+(-3*mi2-1)*L1*L3/2
								     -(3*mi1+1)*L1*L3/2)+2*b2*((3*mi2+1)*L1*L3-3*(1-mi1)*L1*L3-2*L3)))
		/(2*delta*delta);
    B[2][7] = 	       (c1*(b2*(-b2*(L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(3*mi2+1)*L2*L3/2+(-3*mi2-1)*L1*L3/2)
		       -b1*(L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+3*(1-mi1)*L2*L3/2+(3*mi1+1)*L1*L3/2))
		   +b3*(-b2*(L2*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L2*L3/2+2*L3+(-3*mi2-1)*L1*L2/2)
		       -b1*(L2*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L2*L3/2+(3*mi1+1)*L1*L2/2))+b1*(-b2*(-3*mi2-1)*L2*L3-b1*(3*mi1+1)*L2*L3))
		+c2*(b1*(-b2*(L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(3*mi2+1)*L2*L3/2+(-3*mi2-1)*L1*L3/2)
			-b1*(L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+3*(1-mi1)*L2*L3/2+(3*mi1+1)*L1*L3/2))
		    +b3*(-b2*(L1*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L1*L3/2+(3*mi2+1)*L1*L2/2)
			-b1*(L1*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L1*L3/2+3*(1-mi1)*L1*L2/2+2*L2-1))+b2*(-b1*(3*(1-mi1)*L1*L3+2*L3)-b2*(3*mi2+1)*L1*L3))
		+c3*(b1*(-b2*(L2*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L2*L3/2+2*L3+(-3*mi2-1)*L1*L2/2)
			-b1*(L2*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L2*L3/2+(3*mi1+1)*L1*L2/2))
		    +b2*(-b2*(L1*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L1*L3/2+(3*mi2+1)*L1*L2/2)
			-b1*(L1*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L1*L3/2+3*(1-mi1)*L1*L2/2+2*L2-1))
		    +b3*(-b2*(3*(1-mi2)*L1*L2+2*L1)-b1*(-3*mi1-1)*L1*L2)))
		/(2*delta*delta);
    B[2][8] = 	       (c1*(b2*(-c2*(L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(3*mi2+1)*L2*L3/2+(-3*mi2-1)*L1*L3/2)
		       -c1*(L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+3*(1-mi1)*L2*L3/2+(3*mi1+1)*L1*L3/2))
		   +b3*(-c2*(L2*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L2*L3/2+2*L3+(-3*mi2-1)*L1*L2/2)
		       -c1*(L2*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L2*L3/2+(3*mi1+1)*L1*L2/2))+b1*(-c2*(-3*mi2-1)*L2*L3-c1*(3*mi1+1)*L2*L3))
		+c2*(b1*(-c2*(L3*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+(3*mi2+1)*L2*L3/2+(-3*mi2-1)*L1*L3/2)
			-c1*(L3*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+3*(1-mi1)*L2*L3/2+(3*mi1+1)*L1*L3/2))
		    +b3*(-c2*(L1*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L1*L3/2+(3*mi2+1)*L1*L2/2)
			-c1*(L1*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L1*L3/2+3*(1-mi1)*L1*L2/2+2*L2-1))+b2*(-c1*(3*(1-mi1)*L1*L3+2*L3)-c2*(3*mi2+1)*L1*L3))
		+c3*(b1*(-c2*(L2*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L2*L3/2+2*L3+(-3*mi2-1)*L1*L2/2)
			-c1*(L2*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L2*L3/2+(3*mi1+1)*L1*L2/2))
		    +b2*(-c2*(L1*(3*(1-mi2)*L3+(3*mi2+1)*L2-(3*mi2+1)*L1)/2+3*(1-mi2)*L1*L3/2+(3*mi2+1)*L1*L2/2)
			-c1*(L1*(-(3*mi1+1)*L3+3*(1-mi1)*L2+(3*mi1+1)*L1)/2+(-3*mi1-1)*L1*L3/2+3*(1-mi1)*L1*L2/2+2*L2-1))
		    +b3*(-c2*(3*(1-mi2)*L1*L2+2*L1)-c1*(-3*mi1-1)*L1*L2)))
		/(2*delta*delta);

	for(i=0;i<9;i++) for(j=0;j<3;j++) BDi[i][j]=delta*(B[0][i]*Di[0][j]+B[1][i]*Di[1][j]+B[2][i]*Di[2][j]);
	for (i=0;i<9;i++){
	   for (j=0;j<9;j++){
		   Ke[i][j] = Ke[i][j] + (BDi[i][0]*B[0][j] + BDi[i][1]*B[1][j] + BDi[i][2]*B[2][j] + rho*g*delta*N[i]*N[j])/3;
		}
	}





	}

}















 
